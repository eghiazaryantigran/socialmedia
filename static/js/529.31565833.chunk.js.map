{"version":3,"file":"static/js/529.31565833.chunk.js","mappings":"oLACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,mBCiBhL,EAboB,SAACA,GAEjB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAEIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAASC,UACtCH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAIP,EAAKK,SAAEN,EAAMS,QAGtC,ECEA,EAXgB,SAACT,GACb,OACIG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,QAAUC,SAAEN,EAAMU,SAG1C,E,uCC+EMC,GAAqBC,EAAAA,EAAAA,GAAU,CACjCC,KAAK,wBADkBD,EAfL,SAACE,GAEnB,OACIC,EAAAA,EAAAA,MAAA,QAAMC,SAAUF,EAAMG,aAAaX,SAAA,EAG/BH,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,YAAa,qBAAsBC,UAAWC,EAAAA,GAAUZ,KAAM,gBAAiBa,SAAU,CAACC,EAAAA,GAASC,EAAAA,EAAAA,GAAiB,QAC3HrB,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,qBAIxB,IAMA,EAnFgB,SAACN,GAEb,IAAIyB,EAAMzB,EAAM0B,aAIZC,EAAgBF,EAAMG,QAAQC,KAAI,SAAAC,GACnC,OAAO3B,EAAAA,EAAAA,KAAC4B,EAAW,CAAEtB,KAAMqB,EAAErB,KAAMP,GAAI4B,EAAE5B,GAAeE,UAAWC,EAAAA,cAAjByB,EAAE5B,GAGvD,IAEI8B,EAAiBP,EAAMQ,SAASJ,KAAI,SAAAK,GACpC,OAAO/B,EAAAA,EAAAA,KAACgC,EAAO,CAAYzB,QAASwB,EAAExB,QAAmBN,UAAWC,EAAAA,UAAhB6B,EAAEhC,GAC1D,IAEkBuB,EAAMW,eAcxB,OACIrB,EAAAA,EAAAA,MAAA,OAAKX,UAAWC,EAAAA,QAAUC,SAAA,EACtBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,aAAeC,SAS1BqB,KAGLxB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,SAAWC,SAQtB0B,KAKL7B,EAAAA,EAAAA,KAACQ,EAAmB,CAACK,SAnCR,SAACqB,GAClBrC,EAAMsC,YAAYD,EAAOE,cAC7B,MAsCJ,E,oBC/CA,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAlBiB,SAAChB,GAClB,MAAO,CACHC,aAAcD,EAAMC,aAE5B,IACwB,SAACgB,GAErB,MAAO,CACHJ,YAAa,SAACC,GACVG,GAASC,EAAAA,EAAAA,GAAmBJ,GAChC,EAER,IAOIK,EAAAA,EAFJ,CAGEC,E","sources":["webpack://sochialmedia/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Massage/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__yCo2T\",\"dialogsItems\":\"Dialogs_dialogsItems__+lipH\",\"active\":\"Dialogs_active__xePW4\",\"messages\":\"Dialogs_messages__8L3mM\",\"message\":\"Dialogs_message__uDnIA\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogsItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n\r\n        <div className={s.dialog + \" \" + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogsItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialogs}>{props.message}</div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Massage from \"./Massage/Message\"\r\nimport {Navigate, redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state=props.dialogsPages;\r\n\r\n\r\n\r\n    let dialogsElements=state.dialogs.map(d =>{\r\n       return <DialogsItem  name={d.name} id={d.id} key={d.id} className={s.dialogsItems} />\r\n\r\n\r\n    })\r\n\r\n    let messegesElements=state.messages.map(m => {\r\n        return <Massage key={m.id} message={m.message} key={m.id}className={s.messages} />\r\n    })\r\n\r\n    let newMasageBody=state.newMessageBody;\r\n\r\n\r\n\r\n\r\n\r\n    const addNewMessage =(values)=>{\r\n        props.sendMessage(values.newMasageBody)\r\n    }\r\n\r\n// if(!props.isAuth){\r\n//     return <Navigate  to=\"/login\"/ >\r\n// }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n                {/*<DialogsItem name={DialogsData[0].name} id={DialogsData[0].id}/>*/}\r\n                {/*<DialogsItem name={DialogsData[1].name} id={DialogsData[1].id}/>*/}\r\n                {/*<DialogsItem name={DialogsData[2].name} id={DialogsData[2].id}/>*/}\r\n                {/*<DialogsItem name={DialogsData[3].name} id={DialogsData[3].id}/>*/}\r\n                {/*<DialogsItem name={DialogsData[4].name} id={DialogsData[4].id}/>*/}\r\n\r\n\r\n                {dialogsElements}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n\r\n                {/*<Massage message={messagesData[0].message}/>*/}\r\n                {/*<Massage message={messagesData[1].message}/>*/}\r\n                {/*<Massage message={messagesData[2].message}/>*/}\r\n                {/*<Massage message={messagesData[3].message}/>*/}\r\n                {/*<Massage message={messagesData[4].message}/>*/}\r\n\r\n                {messegesElements}\r\n\r\n\r\n            </div>\r\n\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst AddMessageForm =(peops)=>{\r\n\r\n    return(\r\n        <form onSubmit={peops.handleSubmit}>\r\n\r\n            {/*<Field placeholder={\"Enter your Massage\"} component={\"textarea\"} name={\"newMasageBody\"}/>*/}\r\n            <Field placeholder={\"Enter your Massage\"} component={Textarea} name={\"newMasageBody\"} validate={[required,maxLengthCreator(50)]}/>\r\n            <div>\r\n                <button>Send Massage</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst AddMessageFormRedux =reduxForm({\r\n    form:\"dialogAddMessageForm\"\r\n})(AddMessageForm)\r\nexport default Dialogs;","import React from \"react\";\r\nimport {SendMessageCreator} from \"../Redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps =(state)=>{\r\n    return {\r\n        dialogsPages: state.dialogsPages,\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch)=> {\r\n\r\n    return {\r\n        sendMessage: (newMasageBody) => {\r\n            dispatch(SendMessageCreator(newMasageBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n;"],"names":["props","path","id","_jsx","className","s","children","NavLink","to","name","message","AddMessageFormRedux","reduxForm","form","peops","_jsxs","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","maxLengthCreator","state","dialogsPages","dialogsElements","dialogs","map","d","DialogsItem","messegesElements","messages","m","Massage","newMessageBody","values","sendMessage","newMasageBody","compose","connect","dispatch","SendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}